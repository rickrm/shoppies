{"ast":null,"code":"var _jsxFileName = \"/Users/rickm/Desktop/shoppies/src/page/Nominate.js\";\nimport React from 'react';\nimport SearchList from '../components/SearchList';\nimport config from '../config.json';\nimport parseMovie from '../util';\nimport style from 'styled-components';\n\nconst request = require('request');\n\nconst NominateTitle = style.h1`\n\n  color: white;\n  font-weight: bold;\n  text-align: left;\n  font-size: 48px;\n  margin-bottom: 73px;\n\n  @media only screen and (max-width: 820px) {\n\n    text-align: center;\n    font-size: calc(0px + 11.7vw);\n    \n}\n\n`;\nconst Form = style.input`\n\n    width: 100%;\n    height: 31px;\n    color: white;\n    font-size: 18px;\n    font-weight: 400;\n    background-color: transparent;\n    border-style: solid;\n    border-top: 0;\n    border-left: 0;\n    border-right: 0;\n    border-bottom: 5px solid white;\n\n    &::placeholder {\n        font-size: 18px;\n        color: #E3E3E3;\n        font-weight: 400;\n    }\n\n`;\nconst Wrapper = style.div`\n\n  margin: 10.21% 22% 5.07% 22%;\n\n`;\nexport default function Nominate({\n  addMovie,\n  movies,\n  limit\n}) {\n  const [searchInput, setInput] = React.useState(\"\");\n  const [searchOutput, setOuput] = React.useState([]);\n  const [pageCount, setPages] = React.useState(0);\n  const [currPage, setCurrPage] = React.useState(1);\n  React.useEffect(() => {\n    if (searchInput.length <= 2) {\n      request(`http://www.omdbapi.com/?t=${searchInput}&apikey=${config.key}&page=1&type=movie&r=json`, {\n        json: true\n      }, (err, res, body) => {\n        if (body.Response === \"False\") {\n          setOuput([]);\n\n          if (searchInput.length !== 0) {\n            setPages(-1);\n          }\n\n          return;\n        }\n\n        const currMovies = [body];\n        setPages(1);\n        setOuput(currMovies);\n      });\n    } else {\n      request(`http://www.omdbapi.com/?s=${searchInput}&apikey=${config.key}&page=${currPage}&type=movie&r=json`, {\n        json: true\n      }, (err, res, body) => {\n        if (body.Response === \"False\") {\n          setOuput([]);\n          setPages(-1);\n          return;\n        }\n\n        const movieCount = body.totalResults;\n        const currMovies = body.Search;\n        setPages(Math.floor(movieCount / 10) + 1);\n        setOuput(currMovies);\n      });\n    }\n  }, [searchInput, currPage]);\n\n  const handleNextPage = () => {\n    setCurrPage(prev => prev += 1);\n  };\n\n  const handleBackPage = () => {\n    setCurrPage(prev => prev -= 1);\n  };\n\n  const handleChange = e => {\n    setCurrPage(1);\n    setInput(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NominateTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Start Nominating\"), /*#__PURE__*/React.createElement(Form, {\n    placeholder: \"Search for film title (or not up to you)\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SearchList, {\n    limit: limit,\n    input: searchInput,\n    currPage: currPage,\n    goNextPage: handleNextPage,\n    goBackPage: handleBackPage,\n    pages: pageCount,\n    addMovie: addMovie,\n    movies: searchOutput,\n    nominates: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/rickm/Desktop/shoppies/src/page/Nominate.js"],"names":["React","SearchList","config","parseMovie","style","request","require","NominateTitle","h1","Form","input","Wrapper","div","Nominate","addMovie","movies","limit","searchInput","setInput","useState","searchOutput","setOuput","pageCount","setPages","currPage","setCurrPage","useEffect","length","key","json","err","res","body","Response","currMovies","movieCount","totalResults","Search","Math","floor","handleNextPage","prev","handleBackPage","handleChange","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,UAAP,MAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,aAAa,GAAGH,KAAK,CAACI,EAAG;;;;;;;;;;;;;;;CAA/B;AAiBA,MAAMC,IAAI,GAAGL,KAAK,CAACM,KAAM;;;;;;;;;;;;;;;;;;;;CAAzB;AAsBA,MAAMC,OAAO,GAAGP,KAAK,CAACQ,GAAI;;;;CAA1B;AAOA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAlB,EAA+C;AAE1D,QAAM,CAACC,WAAD,EAAcC,QAAd,IAA0BlB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BrB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAAjC;AACA,QAAM,CAACG,SAAD,EAAYC,QAAZ,IAAwBvB,KAAK,CAACmB,QAAN,CAAe,CAAf,CAA9B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BzB,KAAK,CAACmB,QAAN,CAAe,CAAf,CAAhC;AAEAnB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AAElB,QAAGT,WAAW,CAACU,MAAZ,IAAsB,CAAzB,EAA4B;AACxBtB,MAAAA,OAAO,CAAE,6BAA4BY,WAAY,WAAUf,MAAM,CAAC0B,GAAI,2BAA/D,EAA2F;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3F,EAA2G,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAqB;AACnI,YAAIA,IAAI,CAACC,QAAL,KAAkB,OAAtB,EAA+B;AAC3BZ,UAAAA,QAAQ,CAAC,EAAD,CAAR;;AACA,cAAIJ,WAAW,CAACU,MAAZ,KAAuB,CAA3B,EAA8B;AAC1BJ,YAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACH;;AACD;AACH;;AACD,cAAMW,UAAU,GAAG,CAACF,IAAD,CAAnB;AACAT,QAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,QAAAA,QAAQ,CAACa,UAAD,CAAR;AACH,OAXM,CAAP;AAaH,KAdD,MAcO;AACH7B,MAAAA,OAAO,CAAE,6BAA4BY,WAAY,WAAUf,MAAM,CAAC0B,GAAI,SAAQJ,QAAS,oBAAhF,EAAqG;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAArG,EAAqH,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAqB;AAC7I,YAAIA,IAAI,CAACC,QAAL,KAAkB,OAAtB,EAA+B;AAC3BZ,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,UAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACA;AACH;;AAED,cAAMY,UAAU,GAAGH,IAAI,CAACI,YAAxB;AACA,cAAMF,UAAU,GAAGF,IAAI,CAACK,MAAxB;AAEAd,QAAAA,QAAQ,CAACe,IAAI,CAACC,KAAL,CAAWJ,UAAU,GAAC,EAAtB,IAA4B,CAA7B,CAAR;AACAd,QAAAA,QAAQ,CAACa,UAAD,CAAR;AAGH,OAdM,CAAP;AAeH;AAEJ,GAlCD,EAkCG,CAACjB,WAAD,EAAcO,QAAd,CAlCH;;AAoCA,QAAMgB,cAAc,GAAG,MAAM;AACzBf,IAAAA,WAAW,CAAEgB,IAAD,IAAUA,IAAI,IAAI,CAAnB,CAAX;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AACzBjB,IAAAA,WAAW,CAAEgB,IAAD,IAAUA,IAAI,IAAI,CAAnB,CAAX;AACH,GAFD;;AAIA,QAAME,YAAY,GAAGC,CAAD,IAAO;AACvBnB,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAP,IAAAA,QAAQ,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAHD;;AAIA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,oBAAC,IAAD;AAAM,IAAA,WAAW,EAAC,0CAAlB;AAA6D,IAAA,QAAQ,EAAEH,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,UAAD;AACA,IAAA,KAAK,EAAE3B,KADP;AAEA,IAAA,KAAK,EAAEC,WAFP;AAGA,IAAA,QAAQ,EAAEO,QAHV;AAIA,IAAA,UAAU,EAAEgB,cAJZ;AAKA,IAAA,UAAU,EAAGE,cALb;AAMA,IAAA,KAAK,EAAEpB,SANP;AAOA,IAAA,QAAQ,EAAER,QAPV;AAQA,IAAA,MAAM,EAAEM,YARR;AASA,IAAA,SAAS,EAAEL,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAkBH","sourcesContent":["import React from 'react'\nimport SearchList from '../components/SearchList';\nimport config from '../config.json';\nimport parseMovie from '../util';\nimport style from 'styled-components';\n\nconst request = require('request');\n\nconst NominateTitle = style.h1`\n\n  color: white;\n  font-weight: bold;\n  text-align: left;\n  font-size: 48px;\n  margin-bottom: 73px;\n\n  @media only screen and (max-width: 820px) {\n\n    text-align: center;\n    font-size: calc(0px + 11.7vw);\n    \n}\n\n`;\n\nconst Form = style.input`\n\n    width: 100%;\n    height: 31px;\n    color: white;\n    font-size: 18px;\n    font-weight: 400;\n    background-color: transparent;\n    border-style: solid;\n    border-top: 0;\n    border-left: 0;\n    border-right: 0;\n    border-bottom: 5px solid white;\n\n    &::placeholder {\n        font-size: 18px;\n        color: #E3E3E3;\n        font-weight: 400;\n    }\n\n`;\n\nconst Wrapper = style.div`\n\n  margin: 10.21% 22% 5.07% 22%;\n\n`;\n\n\nexport default function Nominate({ addMovie, movies, limit }) {\n\n    const [searchInput, setInput] = React.useState(\"\");\n    const [searchOutput, setOuput] = React.useState([]);\n    const [pageCount, setPages] = React.useState(0);\n    const [currPage, setCurrPage] = React.useState(1);\n\n    React.useEffect(() => {\n\n        if(searchInput.length <= 2) {\n            request(`http://www.omdbapi.com/?t=${searchInput}&apikey=${config.key}&page=1&type=movie&r=json`, { json: true }, (err, res, body) =>  {\n                if (body.Response === \"False\") {\n                    setOuput([]);\n                    if (searchInput.length !== 0) {\n                        setPages(-1);\n                    }\n                    return\n                }\n                const currMovies = [body];\n                setPages(1)\n                setOuput(currMovies)\n            });\n\n        } else {\n            request(`http://www.omdbapi.com/?s=${searchInput}&apikey=${config.key}&page=${currPage}&type=movie&r=json`, { json: true }, (err, res, body) =>  {\n                if (body.Response === \"False\") {\n                    setOuput([]);\n                    setPages(-1);\n                    return\n                }\n            \n                const movieCount = body.totalResults;\n                const currMovies = body.Search;\n    \n                setPages(Math.floor(movieCount/10) + 1);\n                setOuput(currMovies);\n    \n    \n            });\n        }\n\n    }, [searchInput, currPage]);\n\n    const handleNextPage = () => {\n        setCurrPage((prev) => prev += 1);\n    }\n\n    const handleBackPage = () => {\n        setCurrPage((prev) => prev -= 1);\n    }\n\n    const handleChange =(e) => {\n        setCurrPage(1);\n        setInput(e.target.value);\n    }\n    return (\n        <Wrapper>\n            <NominateTitle>\n                Start Nominating\n            </NominateTitle>\n            <Form placeholder=\"Search for film title (or not up to you)\" onChange={handleChange}/>\n            <SearchList \n            limit={limit}\n            input={searchInput}\n            currPage={currPage}\n            goNextPage={handleNextPage} \n            goBackPage ={handleBackPage}\n            pages={pageCount} \n            addMovie={addMovie} \n            movies={searchOutput} \n            nominates={movies}/>\n        </Wrapper>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}